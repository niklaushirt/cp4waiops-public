#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT MODIFY BELOW
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo ""
echo " üöÄ  CP4WAIOPS Create Conneciton"
echo ""
echo "***************************************************************************************************************************************"


#--------------------------------------------------------------------------------------------------------------------------------------------
#  Check Defaults
#--------------------------------------------------------------------------------------------------------------------------------------------

if [ -x "$(command -v kafkacat)" ]; then
      export KAFKACAT_EXE=kafkacat
      echo "  ‚úÖ  OK - kafkacat installed"
else
      if [ -x "$(command -v kcat)" ]; then
      export KAFKACAT_EXE=kcat
            echo "  ‚úÖ  OK - kcat installed"
      else
            echo "  ‚ùó ERROR: kafkacat is not installed."
            echo "  ‚ùå Aborting..."
            exit 1
      fi
fi


#--------------------------------------------------------------------------------------------------------------------------------------------
#  Get Credentials
#--------------------------------------------------------------------------------------------------------------------------------------------

echo "***************************************************************************************************************************************"
echo "  üîê  Getting credentials"
echo "***************************************************************************************************************************************"
if [[  $WAIOPS_NAMESPACE == "" ]]; then
    # Get Namespace from Cluster 
    echo "   ------------------------------------------------------------------------------------------------------------------------------"
    echo "   üî¨ Getting Installation Namespace"
    echo "   ------------------------------------------------------------------------------------------------------------------------------"
    export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')
    echo "       ‚úÖ AI Manager:         OK - $WAIOPS_NAMESPACE"
else
    echo "       ‚úÖ AI Manager:         OK - $WAIOPS_NAMESPACE"
fi

oc project $WAIOPS_NAMESPACE 

export EVENTS_TOPIC="cp4waiops-cartridge.topology.input.resources"
export FILE="./tools/02_training/scripts/topo.json"

export KAFKA_SECRET=$(oc get secret -n $WAIOPS_NAMESPACE |grep 'aiops-kafka-secret'|awk '{print$1}')
export SASL_USER=$(oc get secret $KAFKA_SECRET -n $WAIOPS_NAMESPACE --template={{.data.username}} | base64 --decode)
export SASL_PASSWORD=$(oc get secret $KAFKA_SECRET -n $WAIOPS_NAMESPACE --template={{.data.password}} | base64 --decode)
export KAFKA_BROKER=$(oc get routes iaf-system-kafka-0 -n $WAIOPS_NAMESPACE -o=jsonpath='{.status.ingress[0].host}{"\n"}'):443



echo ""
echo ""


#--------------------------------------------------------------------------------------------------------------------------------------------
#  Get the cert for kafkacat
#--------------------------------------------------------------------------------------------------------------------------------------------
echo "***************************************************************************************************************************************"
echo "ü•á Getting Certs"
echo "***************************************************************************************************************************************"
mv ca.crt ca.crt.old
oc extract secret/kafka-secrets -n $WAIOPS_NAMESPACE --keys=ca.crt
echo "      ‚úÖ OK"





#--------------------------------------------------------------------------------------------------------------------------------------------
#  Check Credentials
#--------------------------------------------------------------------------------------------------------------------------------------------

echo "***************************************************************************************************************************************"
echo "  üîó  Checking credentials"
echo "***************************************************************************************************************************************"



if [[ ! $KAFKA_BROKER =~ "iaf-system-kafka-0-$WAIOPS_NAMESPACE" ]] ;
then
      echo "      ‚ùó Kafka Broker not found..."
      echo "      ‚ùå Aborting..."
      exit 1
else
      echo "      ‚úÖ OK - Kafka Broker"
fi


echo ""
echo ""
echo ""
echo ""


echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo "  "
echo "  üîé  Parameter for Kafka"
echo "  "
echo "           üåè Kafka Broker URL            : $KAFKA_BROKER"
echo "           üîê Kafka User                  : $SASL_USER"
echo "           üîê Kafka Password              : $SASL_PASSWORD"
echo "  "
echo "           üìÖ Date Format                 : $(date $DATE_FORMAT) ($DATE_FORMAT)"
echo "  "
echo "  "
echo "  "
echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo ""
echo ""



echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo ""
echo ""
echo ""
echo ""

#--------------------------------------------------------------------------------------------------------------------------------------------
#  Launch Log Injection as a parallel thread
#--------------------------------------------------------------------------------------------------------------------------------------------
echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo " üöÄ  Launching" 
echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo ""
echo ""
echo ""
echo ""

#--------------------------------------------------------------------------------------------------------------------------------------------
#  Inject the Events
#--------------------------------------------------------------------------------------------------------------------------------------------
echo "***************************************************************************************************************************************"
echo "üåè  Injecting Events from File: ${actFile}" 
echo "     Quit with Ctrl-Z"
echo "***************************************************************************************************************************************"

echo "Injecting file $FILE"
${KAFKACAT_EXE} -v -X security.protocol=SASL_SSL -X ssl.ca.location=./ca.crt -X sasl.mechanisms=SCRAM-SHA-512  -X sasl.username=$SASL_USER -X sasl.password=$SASL_PASSWORD -b $KAFKA_BROKER -P -t $EVENTS_TOPIC -l $FILE   
echo "      ‚úÖ OK"

#--------------------------------------------------------------------------------------------------------------------------------------------
#  Clean up
#--------------------------------------------------------------------------------------------------------------------------------------------

rm ./ca.crt


echo ""
echo ""
echo ""
echo ""
echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"
echo ""
echo " ‚úÖ  Done..... "
echo ""
echo "***************************************************************************************************************************************"
echo "***************************************************************************************************************************************"


