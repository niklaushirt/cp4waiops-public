#while true; do oc port-forward statefulset/$(oc get statefulset | grep es-server-all | awk '{print $1}') 9200; done
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT MODIFY BELOW
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

echo "   __________  __ ___       _____    ________            "
echo "  / ____/ __ \/ // / |     / /   |  /  _/ __ \____  _____"
echo " / /   / /_/ / // /| | /| / / /| |  / // / / / __ \/ ___/"
echo "/ /___/ ____/__  __/ |/ |/ / ___ |_/ // /_/ / /_/ (__  ) "
echo "\____/_/      /_/  |__/|__/_/  |_/___/\____/ .___/____/  "
echo "                                          /_/            "
echo ""
echo ""
echo ""
echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo ""
echo " üöÄ  CP4WAIOPS Dump ALL Indexes"
echo ""
echo "***************************************************************************************************************************************************"




export WORKING_DIR="./tools/02_training/helpers/dump_es/DUMP/all"


#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT MODIFY BELOW
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

export APP_NAME=robot-shop
export INDEX_TYPE=all

# Get Namespace from Cluster 
echo "   ------------------------------------------------------------------------------------------------------------------------------"
echo "   üî¨ Getting Installation Namespace"
echo "   ------------------------------------------------------------------------------------------------------------------------------"

export WAIOPS_NAMESPACE=$(oc get po -A|grep aimanager-operator |awk '{print$1}')
echo "       ‚úÖ OK - AI Manager:    $WAIOPS_NAMESPACE"







  read -p "Start Dump? [y,N] " DO_COMM
  if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
      echo "‚úÖ Ok, continuing..."
  else
    echo "‚ùå Aborted"
    exit 1
  fi

oc project $WAIOPS_NAMESPACE

#--------------------------------------------------------------------------------------------------------------------------------------------
#  Get Credentials
#--------------------------------------------------------------------------------------------------------------------------------------------

echo "***************************************************************************************************************************************************"
echo "  üîê  Getting credentials"
echo "***************************************************************************************************************************************************"

export username=$(oc get secret $(oc get secrets | grep ibm-aiops-elastic-secret | awk '!/-min/' | awk '{print $1;}') -o jsonpath="{.data.username}"| base64 --decode)
export password=$(oc get secret $(oc get secrets | grep ibm-aiops-elastic-secret | awk '!/-min/' | awk '{print $1;}') -o jsonpath="{.data.password}"| base64 --decode)

export WORKING_DIR_ES="./tools/02_training/TRAINING_FILES/ELASTIC/$APP_NAME/$INDEX_TYPE"


echo "      ‚úÖ OK"
echo ""
echo ""



#--------------------------------------------------------------------------------------------------------------------------------------------
#  Check Credentials
#--------------------------------------------------------------------------------------------------------------------------------------------

echo "***************************************************************************************************************************************************"
echo "  üîó  Checking credentials"
echo "***************************************************************************************************************************************************"

if [[ $username == "" ]] ;
then
      echo "‚ùå Could not get Elasticsearch Username. Aborting..."
      exit 1
else
      echo "      ‚úÖ OK - Elasticsearch Username"
fi

if [[ $password == "" ]] ;
then
      echo "‚ùå Could not get Elasticsearch Password. Aborting..."
      exit 1
else
      echo "      ‚úÖ OK - Elasticsearch Password"
fi



echo ""
echo ""
echo ""
echo ""


echo "***************************************************************************************************************************************************"
echo "  "
echo "   üîé  Dumping ALL indexes"
echo "  "
echo "           Data Files  : $WORKING_DIR"
echo "  "
echo "           User        : $username"
echo "           Password    : $password"
echo "  "
echo "***************************************************************************************************************************************************"



export existingIndexes=$(curl -k -u $username:$password -XGET https://localhost:9200/_cat/indices) 


if [[ $existingIndexes == "" ]] ;
then
    echo "‚ùó Please start port forward in separate terminal."
    echo "‚ùó Run the following:"
    echo "    while true; do oc port-forward statefulset/$(oc get statefulset | grep es-server-all | awk '{print $1}') 9200; done"
    echo "‚ùå Aborting..."
    exit 1
fi


echo "   ‚úÖ  OK"


mkdir -p $WORKING_DIR
rm $WORKING_DIR/*.json

export NODE_TLS_REJECT_UNAUTHORIZED=0

echo "***************************************************************************************************************************************************"
echo "   üîé  LOGS indexes"
echo "***************************************************************************************************************************************************"

for index in $(curl -k -u $username:$password -XGET https://localhost:9200/_cat/indices | sort | grep -v "logtrain" | awk '{print $3}'); 
do
  echo "***************************************************************************************************************************************************"
  echo "   üíæ  Dumping Index ${index}.json"
  elasticdump --input=https://$username:$password@localhost:9200/${index} --limit=5000 --output="$WORKING_DIR/${index}.json" --type=data; 
done





echo "***************************************************************************************************************************************************"
echo "***************************************************************************************************************************************************"
echo ""
echo " ‚úÖ  DONE: CP4WAIOPS Dump ALL Indexes"
echo ""
echo "***************************************************************************************************************************************************"


