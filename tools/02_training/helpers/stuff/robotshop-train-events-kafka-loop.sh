
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# TRAIN EVENTS TRHOUGH NOI WEBHOOK
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ADAPT VALUES
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


export APP_NAME=robot-shop
export EVENTS_TYPE=noi   # humio, elk, splunk, ...

# Override Kafka Topic Name if you have several integrations. Check the name in AI Hub / Data Tools and Integrations / KAfka Integrations / Kafka Topic (greyed out, above Field Mapping)
#export EVENTS_TOPIC=logs-humio-xyz # Comment out for autodetection

# Get Namespace from Cluster 
echo "   ------------------------------------------------------------------------------------------------------------------------------"
echo "   üî¨ Getting Installation Namespace"
echo "   ------------------------------------------------------------------------------------------------------------------------------"

export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')
echo "       ‚úÖ OK - AI Manager:    $WAIOPS_NAMESPACE"



echo "***************************************************************************************************************************************************"
echo "ü•á Getting Credentials"
echo "***************************************************************************************************************************************************"

echo "     üìõ Select Namespace $WAIOPS_NAMESPACE"
oc project $WAIOPS_NAMESPACE  >/tmp/demo.log 2>&1  || true
echo " "
echo "     üì• Kafka Topics"
export KAFKA_TOPIC_LOGS=$(oc get kafkatopics -n $WAIOPS_NAMESPACE | grep logs-$LOG_TYPE| awk '{print $1;}')
export KAFKA_TOPIC_EVENTS=$(oc get kafkatopics -n $WAIOPS_NAMESPACE | grep alerts-$EVENTS_TYPE| awk '{print $1;}')

echo " "
echo "     üîê Kafka Password"
export KAFKA_SECRET=$(oc get secret -n $WAIOPS_NAMESPACE |grep 'aiops-kafka-secret'|awk '{print$1}')
export SASL_USER=$(oc get secret $KAFKA_SECRET -n $WAIOPS_NAMESPACE --template={{.data.username}} | base64 --decode)
export SASL_PASSWORD=$(oc get secret $KAFKA_SECRET -n $WAIOPS_NAMESPACE --template={{.data.password}} | base64 --decode)
export KAFKA_BROKER=$(oc get routes iaf-system-kafka-0 -n $WAIOPS_NAMESPACE -o=jsonpath='{.status.ingress[0].host}{"\n"}'):443
echo " "
echo "     üì• Formats"
export WORKING_DIR_LOGS="./tools/01_demo/INCIDENT_FILES/$APP_NAME/logs"
export WORKING_DIR_EVENTS="./tools/01_demo/INCIDENT_FILES/$APP_NAME/events"

export DATE_FORMAT_EVENTS="+%Y-%m-%dT%H:%M:%S"
case $LOG_TYPE in
  elk) export DATE_FORMAT_LOGS="+%Y-%m-%dT%H:%M:%S.000000+00:00";;
  humio) export DATE_FORMAT_LOGS="+%s000";;
  *) export DATE_FORMAT_LOGS="+%s000";;
esac

echo " "




#--------------------------------------------------------------------------------------------------------------------------------------------
#  Get Credentials
#--------------------------------------------------------------------------------------------------------------------------------------------


if [ -x "$(command -v kafkacat)" ]; then
      export KAFKACAT_EXE=kafkacat
else
      if [ -x "$(command -v kcat)" ]; then
            export KAFKACAT_EXE=kcat
      else
            echo "     ‚ùó ERROR: kafkacat is not installed."
            echo "     ‚ùå Aborting..."
            exit 1
      fi
fi



#--------------------------------------------------------------------------------------------------------------------------------------------
#  Get the cert for kafkacat
#--------------------------------------------------------------------------------------------------------------------------------------------
echo "***************************************************************************************************************************************************"
echo "ü•á Getting Certs"
echo "***************************************************************************************************************************************************"
oc extract secret/kafka-secrets -n $WAIOPS_NAMESPACE --keys=ca.crt
echo "      ‚úÖ OK"



#--------------------------------------------------------------------------------------------------------------------------------------------
#  Check Credentials
#--------------------------------------------------------------------------------------------------------------------------------------------

echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"
echo "     üîó  Checking credentials"
echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ $KAFKA_TOPIC_EVENTS == "" ]] ;
then
      echo "   ‚ùå Please create the $LOG_TYPE Kafka Log Integration. Aborting..."
      exit 1
else
      echo "         ‚úÖ OK - Logs Topic"
fi

if [[ $KAFKA_BROKER == "" ]] ;
then
      echo "   ‚ùå Make sure that the Strimzi Route got created at install time. Aborting..."
      exit 1
fi


echo "   "
echo "   "
echo "   "
echo "   "


echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"
echo "     "
echo "     üîé  Parameter for Incident Simulation for $APP_NAME"
echo "     "
echo "              üóÇ  Topic                       : $KAFKA_TOPIC_EVENTS"
echo "              üåè Kafka Broker URL            : $KAFKA_BROKER"
echo "              üîê Kafka User                  : $SASL_USER"
echo "              üîê Kafka Password              : $SASL_PASSWORD"
echo "              üñ•Ô∏è  Kafka Executable            : $KAFKACAT_EXE"
echo "     "
echo "              üìù Log Type                    : $LOG_TYPE"
echo "              üìÖ Date Format                 : $(date $DATE_FORMAT_EVENTS) ($DATE_FORMAT_EVENTS)"
echo "     "
echo "              üìÇ Directory for Injection     : $WORKING_DIR_EVENTS"
echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"
echo "   "
echo "   "
echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"
echo "     üóÑÔ∏è  Files to be loaded"
echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"
ls -1 $WORKING_DIR_EVENTS | grep "json"
echo "     "
echo "   ------------------------------------------------------------------------------------------------------------------------------------------------"





echo "   "
echo "   "

#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT EDIT BELOW
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




while true; 
do
    ./tools/02_training/scripts/train-events-kafka-date.sh
done



