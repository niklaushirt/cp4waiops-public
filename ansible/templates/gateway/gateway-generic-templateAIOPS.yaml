apiVersion: ai-manager.watson-aiops.ibm.com/v1beta1
kind: EventManagerGateway
metadata:
  name: eventmanagergateway
  namespace: cp4waiops
spec:
  logLevel: WARN
  license:
    accept: true
  objectServerPrimaryPort: 6001
  serviceAccountName: ''
  overrideProps: ''
  objectServerCAConfigmapName: emg-noi-ca
  objectServerBackupPort: 6002
  kafka:
    clusterName: iaf-system
    namespace: ''
    topicName: cp4waiops-cartridge-alerts-noi-ahoi2d1w
    userName: cp4waiops-cartridge-kafka-auth
  objectServerPrimaryIP: 10.196.124.184
  objectServerPrimaryHost: evtmanager-proxy.noi.svc
  objectServerBackupIP: 10.196.124.184
  objectServerBackupHost: evtmanager-proxy.noi.svc
  replicationTypes:
    - INSERTS
    - UPDATES
  virtualPairName: AGG_V
  imagePullSecret: ibm-entitlement-key
  objectServerPrimaryIducHost: evtmanager-objserv-agg-primary
  omniSecretName: evtmanager-omni-secret
  objectServerBackupIducHost: evtmanager-objserv-agg-backup
  enableTransportDebugLog: false
  filter: Severity=4


apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    release: evtmanager
  name: evtmanager-gateway-allow-iduc
  namespace: noi
spec:
  ingress:
  - from: []
    ports:
      - protocol: TCP
        port: 4101
  podSelector:
    matchLabels:
      release: evtmanager
      appClass: objserv
  policyTypes:
  - Ingress



apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nik-evtmanager-gateway-allow-kafka
  namespace: cp4waiops
spec:
  podSelector:
    matchLabels:
      ibmevents.ibm.com/name: iaf-system-kafka
  ingress:
  - from: []
    ports:
      - protocol: TCP
        port: 9093
  policyTypes:
    - Ingress

getent hosts iaf-system-kafka-bootstrap
socat - TCP4:iaf-system-kafka-bootstrap:9093,connect-timeout=10
socat - TCP4:aiops-akora-ui:88080,connect-timeout=10







apiVersion: ai-manager.watson-aiops.ibm.com/v1beta1
kind: EventManagerGateway
metadata:
  name: emg-noi-nik-test
spec:
  filter: Severity=5
  kafka:
    clusterName: iaf-system
    topicName: cp4waiops-cartridge-alerts-noi-zkittl87
    userName: cp4waiops-cartridge-kafka-auth
    namespace: "cp4waiops"
  license:
    accept: true
  logLevel: DEBUG
  objectServerPrimaryHost: evtmanager-proxy.noi.svc
  objectServerPrimaryPort: 6001
  objectServerPrimaryIducHost: evtmanager-objserv-agg-primary
  objectServerPrimaryIP: ''
  objectServerBackupHost: evtmanager-proxy.noi.svc
  objectServerBackupPort: 6002
  objectServerBackupIP: ''
  objectServerBackupIducHost: evtmanager-objserv-agg-backup
  objectServerCAConfigmapName: ''
  omniSecretName: "evtmanager-omni-secret"
  overrideProps: ""
  enableTransportDebugLog: true
  replicationTypes:
  - INSERTS
  - UPDATES
  serviceAccountName: ""
  imagePullSecret: "ibm-entitlement-key"
  virtualPairName: AGG_V





kind: Service
apiVersion: v1
metadata:
  name: evtmanager-objserv-agg-primary
  namespace: cp4waiops
spec:
  type: ExternalName
  externalName: evtmanager-objserv-agg-primary.noi.svc.cluster.local
  ports:
  - port: 4100
    name: primary-tds-port
  - port: 4101
    name: primary-iduc-port


kind: Service
apiVersion: v1
metadata:
  name: evtmanager-objserv-agg-backup
  namespace: cp4waiops
spec:
  type: ExternalName
  externalName: evtmanager-objserv-agg-backup.noi.svc.cluster.local
  ports:
  - port: 4100
    name: backup-tds-port
  - port: 4101
    name: backup-iduc-port
  - port: 4300
    name: agg-gate-tds-port


oc get secret evtmanager-omni-secret -n noi -ojson | jq -r '.data.OMNIBUS_ROOT_PASSWORD'| base64 -d > ./OMNIBUS_ROOT_PASSWORD
oc create secret generic evtmanager-omni-secret -n cp4waiops --from-literal=username=root --from-file=password=./OMNIBUS_ROOT_PASSWORD
rm ./OMNIBUS_ROOT_PASSWORD