apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    release: evtmanager
  name: evtmanager-gateway-allow-iduc
  namespace: {{EVTMGR_NAMESPACE}}
spec:
  ingress:
  - from: []
    ports:
      - protocol: TCP
        port: 4101
  podSelector:
    matchLabels:
      release: evtmanager
      appClass: objserv
  policyTypes:
  - Ingress
---
kind: Service
apiVersion: v1
metadata:
  name: evtmanager-objserv-agg-primary
  namespace: {{ WAIOPS_NAMESPACE }}
spec:
  type: ExternalName
  externalName: evtmanager-objserv-agg-primary.{{EVTMGR_NAMESPACE}}.svc.cluster.local
  ports:
  - port: 4100
    name: primary-tds-port
  - port: 4101
    name: primary-iduc-port
---
kind: Service
apiVersion: v1
metadata:
  name: evtmanager-objserv-agg-backup
  namespace: {{ WAIOPS_NAMESPACE }}
spec:
  type: ExternalName
  externalName: evtmanager-objserv-agg-backup.{{EVTMGR_NAMESPACE}}.svc.cluster.local
  ports:
  - port: 4100
    name: backup-tds-port
  - port: 4101
    name: backup-iduc-port
  - port: 4300
    name: agg-gate-tds-port
---
apiVersion: ai-manager.watson-aiops.ibm.com/v1beta1
kind: EventManagerGateway
metadata:
  name: eventmanagergateway
  namespace: {{ WAIOPS_NAMESPACE }}
spec:
  logLevel: DEBUG
  license:
    accept: true
  objectServerPrimaryPort: 6001
  serviceAccountName: aimanager-operator
  overrideProps: ''
  objectServerCAConfigmapName: ''
  objectServerBackupPort: 6002
  kafka:
    clusterName: iaf-system
    namespace: '{{ WAIOPS_NAMESPACE }}'
    topicName: {{ NOI_KAFKA_TOPIC }}
    userName: {{ WAIOPS_NAMESPACE }}-cartridge-kafka-auth-0
  objectServerPrimaryIP: ''
  objectServerPrimaryHost: evtmanager-proxy.{{EVTMGR_NAMESPACE}}.svc
  objectServerBackupIP: ''
  objectServerBackupHost: evtmanager-proxy.{{EVTMGR_NAMESPACE}}.svc
  replicationTypes:
    - INSERTS
    - UPDATES
  virtualPairName: AGG_V
  imagePullSecret: ibm-entitlement-key
  objectServerPrimaryIducHost: eventmanager-objserv-agg-primary
  omniSecretName: aiops-omni-secret
  objectServerBackupIducHost: eventmanager-objserv-agg-backup
  enableTransportDebugLog: true
  filter: (Severity>2) AND ((AlertGroup = \'robot-shop\') OR (AlertGroup = \'qotd\'))
