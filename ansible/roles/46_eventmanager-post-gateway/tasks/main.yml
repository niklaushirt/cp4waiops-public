

# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Create Gateway
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
    

- name: TIMESTAMP -              üü¢ START - INSTALL EVENT MANAGER GATEWAY
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"



- name: GATEWAY -            üîé Check AI Manager Installed
  shell: |
    export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')
    echo $WAIOPS_NAMESPACE
  ignore_errors: yes
  register: AIMANAGER_EXISTS


- name: GATEWAY -            üîê Copy Pull Secret from WAIOPS Namespace
  shell: |
    oc delete secret aiops-omni-secret -n {{ WAIOPS_NAMESPACE }}
    oc get secret evtmanager-omni-secret -n {{ EVTMGR_NAMESPACE }} -ojson | jq -r '.data.OMNIBUS_ROOT_PASSWORD'| base64 -d > ./OMNIBUS_ROOT_PASSWORD
    oc create secret generic aiops-omni-secret -n {{ WAIOPS_NAMESPACE }} --from-literal=username=root --from-file=password=./OMNIBUS_ROOT_PASSWORD --from-file=OMNIBUS_ROOT_PASSWORD=./OMNIBUS_ROOT_PASSWORD
    rm ./OMNIBUS_ROOT_PASSWORD
  ignore_errors: yes
  when: AIMANAGER_EXISTS.stdout != ""



- name: GATEWAY -            üîé Check Gateway
  shell: |
    oc get EventManagerGateway --ignore-not-found -n {{ WAIOPS_NAMESPACE }} event-gateway-generic
  ignore_errors: yes
  register: OBJECT_EXISTS
  when: AIMANAGER_EXISTS.stdout != ""


- name: GATEWAY -            üåè Get NOI Kafka Topic
  shell: |
    EVENTS_TOPIC=$(oc get kafkatopics.ibmevents.ibm.com -n {{ WAIOPS_NAMESPACE }} | grep -v noi-integration| grep -v cp4waiopscp4waiops | grep alerts-noi| awk '{print $1;}')
    echo $EVENTS_TOPIC
  ignore_errors: yes
  register: RES_NOI_KAFKA_TOPIC 
  when: AIMANAGER_EXISTS.stdout != ""


- name: GATEWAY -            üì• Set  NOI Kafka Topic {{RES_NOI_KAFKA_TOPIC.stdout}}
  set_fact: NOI_KAFKA_TOPIC={{ RES_NOI_KAFKA_TOPIC.stdout }} 
  when: AIMANAGER_EXISTS.stdout != ""



- name: GATEWAY -            üöÄ Install Gateway
  block:
  # --------------------------------------------------------------------------------------------------------------------------------------
  # Create Gateway
  # --------------------------------------------------------------------------------------------------------------------------------------
  - name: GATEWAY -            üöÄ Create Gateway
    kubernetes.core.k8s:
      state: present
      namespace: "{{ WAIOPS_NAMESPACE }}"
      template: ./templates/gateway/1_gateway-generic-template.j2
    when: AIMANAGER_EXISTS.stdout != ""
  # - name: GATEWAY -            ü©π Patch Gateway
  #   shell: oc apply -n {{ WAIOPS_NAMESPACE }} -f ./templates/gateway/2_gateway_cr_cm.yaml
  #   ignore_errors: yes

  # - name: GATEWAY -            ‚ôªÔ∏è  Restart Gateway
  #   shell: oc delete pod -n {{ WAIOPS_NAMESPACE }} $(oc get po -n {{ WAIOPS_NAMESPACE }}|grep event-gateway-generic|awk '{print$1}') 
  #   ignore_errors: yes
  when: AIMANAGER_EXISTS.stdout != ""
