
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Install CP4WAIOPS PREREQUISITES
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

- name: TIMESTAMP -              ðŸŸ¢ START - AI MANAGER OPERATORS
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: LOGGING -              ðŸŸ¢ WRITE TO LOGFILE
  shell: |
    export MESSAGE="Installing CP4WAIOPS Operator"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../installAIManager.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes



# Create IBM Operator Catalog
- name: AI Manager -           ðŸš€ Install IBM Operator Catalog
  kubernetes.core.k8s:
    state: present
    template: ./templates/waiops/1_cat-ibm-operator.j2


# Create IBM AIOps Catalog
# - name: AI Manager -           ðŸš€ Install IBM AIOps Catalog
#   kubernetes.core.k8s:
#     state: present
#     template: ./templates/waiops/2_cat-ibm-aiops.j2


# Create IBM AIOps Operator Group
- name: AI Manager -           ðŸš€ Install Operator Group
  kubernetes.core.k8s:
    state: present
    template: ./templates/waiops/2_opgroup-ibm-aiops.j2


# Create IBM AIOps Subscription
- name: AI Manager -           ðŸš€ Install Subscription
  kubernetes.core.k8s:
    state: present
    template: ./templates/waiops/3_sub-ibm-aiops-orchestrator.j2


# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Marketplace being ready
# --------------------------------------------------------------------------------------------------------------------------------------
# - name: CHECK -              ðŸ•¦ Wait for openshift-marketplace to become ready
#   shell: oc get po -n openshift-marketplace | grep -v Running |grep -v Completed | grep -c ""
#   register: kubectl_get_pods
#   until: kubectl_get_pods.stdout == "1"
#   retries: 500
#   delay: 15




# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Operators being ready
# --------------------------------------------------------------------------------------------------------------------------------------
# - name: CHECK -              ðŸ•¦ Wait for operators to become ready in Namespace {{ WAIOPS_NAMESPACE }}
#   shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep Running | grep -v "0/1" |grep -c ""
#   register: kubectl_get_pods
#   until: kubectl_get_pods.stdout|int > "6"
#   retries: 500
#   delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for serviceaccount being ready
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CHECK -              ðŸ•¦ Wait for serviceaccount to become ready
  shell: oc get -n openshift-marketplace serviceaccount ibm-operator-catalog --no-headers| grep -c ""
  register: kubectl_get_sa
  until: kubectl_get_sa.stdout == "1"
  retries: 500
  delay: 15





# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for CSV being ready
# --------------------------------------------------------------------------------------------------------------------------------------
- name: AI Manager -           ðŸš€ Patch service account for pull secret (you can ignore errors)
  shell: |
    oc patch -n openshift-marketplace serviceaccount ibm-operator-catalog -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc delete pod $(oc get po -n openshift-marketplace|grep ImagePull|awk '{print$1}') -n openshift-marketplace --ignore-not-found
  register: kubectl_get_pods
  ignore_errors: yes



- name: LOGGING -              ðŸŸ¢ WRITE TO LOGFILE
  shell: |
    export MESSAGE=" ðŸ•¦ Wait for CSVs to become ready"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../installAIManager.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes


# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for CSV being ready
# --------------------------------------------------------------------------------------------------------------------------------------
- name: CHECK -              ðŸ•¦ Wait for CSVs to become ready
  shell: oc get csv -n {{ WAIOPS_NAMESPACE }}|grep -v "Succeeded"| grep -v ibm-watson-aiops-ui-operator | grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15



- name: LOGGING -              ðŸŸ¢ WRITE TO LOGFILE
  shell: |
    export MESSAGE=" âœ… CSVs are ready"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes

