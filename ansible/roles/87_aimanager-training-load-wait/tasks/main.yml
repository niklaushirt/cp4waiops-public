

- name: TIMESTAMP -              ðŸŸ¢ START - WAIT FOR TRAINING DATA TO LOAD
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: TRAINING WAIT -          ðŸ“¥ WRITE TO LOGFILE
  shell: |
    export MESSAGE="Wait for Training Data to finish loading"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../installAIManager.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes




- name: TRAINING WAIT -          ðŸ•¦ WAIT FOR COMPLETION METRICS
  shell: |
    while : ; do
          READY=$(oc get jobs -n default load-metric-cassandra)
          if [[ ! $READY  =~ "1/1" ]]; then
                echo "        Load Job not completed. Waiting 30 seconds"
                sleep 30
          else
                break
          fi
    done
    echo "      âœ… OK"
  register: ES_READY
  args:
    executable: /bin/bash


- name: TRAINING WAIT -          ðŸ§» CLEANUP JOB METRICS
  kubernetes.core.k8s:
    state: absent
    src: ./templates/training/load-job-metric.yaml
  


- name: TRAINING WAIT -          ðŸ§» CLEANUP COMPLETED JOBS METRICS
  shell: |
    oc delete pod  -n default --ignore-not-found $(oc get po -n default|grep load-metric-cassandra|awk '{print$1}')
  register: ES_READY
  ignore_errors: yes


- name: TRAINING WAIT -          ðŸ•¦ WAIT FOR COMPLETION SNOW
  shell: |
    while : ; do
          READY=$(oc get jobs -n default load-snow-indexes)
          if [[ ! $READY  =~ "1/1" ]]; then
                echo "        Load Job not completed. Waiting 30 seconds"
                sleep 30
          else
                break
          fi
    done
    echo "      âœ… OK"
  register: ES_READY
  args:
    executable: /bin/bash


- name: TRAINING WAIT -          ðŸ§» CLEANUP JOB SNOW
  kubernetes.core.k8s:
    state: absent
    src: ./templates/training/load-job-snow.yaml
  


- name: TRAINING WAIT -          ðŸ§» CLEANUP COMPLETED JOBS SNOW
  shell: |
    oc delete pod  -n default --ignore-not-found $(oc get po -n default|grep load-snow-indexes|awk '{print$1}')
  register: ES_READY
  ignore_errors: yes





- name: TRAINING WAIT -          ðŸ•¦ WAIT FOR COMPLETION LAD
  shell: |
    while : ; do
          READY=$(oc get jobs -n default load-log-indexes)
          if [[ ! $READY  =~ "1/1" ]]; then
                echo "        Load Job not completed. Waiting 30 seconds"
                sleep 30
          else
                break
          fi
    done
    echo "      âœ… OK"
  register: ES_READY
  args:
    executable: /bin/bash


- name: TRAINING WAIT -          ðŸ§» CLEANUP JOB LAD
  kubernetes.core.k8s:
    state: absent
    src: ./templates/training/load-job-logs.yaml
  


- name: TRAINING WAIT -          ðŸ§» CLEANUP COMPLETED JOBS LAD
  shell: |
    oc delete pod  -n default --ignore-not-found $(oc get po -n default|grep load-log-indexes|awk '{print$1}')
  register: ES_READY
  ignore_errors: yes

