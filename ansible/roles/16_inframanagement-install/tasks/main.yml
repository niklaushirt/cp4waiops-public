
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Install CP4WAIOPS PREREQUISITES
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

- name: TIMESTAMP -              🟢 START - AI MANAGER INFRASTRUCTURE AUTOMATION
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: INFRA MGT -              � WRITE TO LOGFILE
  shell: |
    export MESSAGE="Installing CP4WAIOPS Infrastructure Automation"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../installAIManager.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes





# Create Namespace 
- name: INFRA MGT -              🚀 Create CP4WAIOPS Infra namespace {{ WAIOPS_NAMESPACE }}-infra
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ WAIOPS_NAMESPACE }}-infra"
    state: present
  ignore_errors: yes


- name: INFRA MGT -              🚀 Create Pull Secret
  shell: |
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace={{ WAIOPS_NAMESPACE }}-infra
    oc create secret docker-registry 'ibm-management-pull-secret' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace={{ WAIOPS_NAMESPACE }}-infra
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace=openshift-marketplace
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace=openshift-operators
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace={{ WAIOPS_NAMESPACE }}-infra
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace=openshift-marketplace
    oc create secret docker-registry 'ibm-entitlement-key' --docker-server={{ ENTITLED_REGISTRY }} --docker-username={{ ENTITLED_REGISTRY_USER }} --docker-password={{ ENTITLED_REGISTRY_KEY }} --namespace=openshift-operators
    oc patch -n openshift-marketplace serviceaccount ibm-aiops-catalog -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
    oc patch -n openshift-marketplace serviceaccount default -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
  ignore_errors: yes









# Create IBM Operator Catalog
- name: INFRA MGT -              🚀 Install IBM Operator Catalog
  kubernetes.core.k8s:
    state: present
    template: ./templates/infra-automation/1_cat-ibm-operator.j2


# Create IBM AIOps Catalog
# - name: INFRA MGT -              🚀 Install IBM AIOps Catalog
#   kubernetes.core.k8s:
#     state: present
#     template: ./templates/infra-automation/2_cat-ibm-aiops.j2


# Create IBM AIOps Operator Group
- name: INFRA MGT -              🚀 Install Operator Group
  kubernetes.core.k8s:
    state: present
    template: ./templates/infra-automation/2_opgroup-ibm-aiops.j2


# Create IBM AIOps Subscription
- name: INFRA MGT -              🚀 Install Subscription
  kubernetes.core.k8s:
    state: present
    template: ./templates/infra-automation/3_sub-ibm-aiops-infra.j2


# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for CSV being ready
# --------------------------------------------------------------------------------------------------------------------------------------
- name: INFRA MGT -              🕦 Wait for CSVs to become ready
  shell: oc get csv -n {{ WAIOPS_NAMESPACE }}-infra|grep -v "Succeeded" | grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15



# Create IBM AIOps Subscription
- name: INFRA MGT -              🚀 Create IA Config
  kubernetes.core.k8s:
    state: present
    template: ./templates/infra-automation/4_iaconfig-aiops-infra.j2




# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Common Services
# --------------------------------------------------------------------------------------------------------------------------------------

- name: INFRA MGT -              🕦 Wait for more than >{{ CS_NS_MIN_PODS }} pods in namespace ibm-common-services (this might take some time)
  shell: |
    NUM_PODS=$(oc get po -n ibm-common-services | wc -l)
    echo $NUM_PODS
  register: kubectl_num_pods
  until: kubectl_num_pods.stdout|int > CS_NS_MIN_PODS
  retries: 500
  delay: 15




- name: CHECKINFRA MGT -         🕦 Wait for ibm-common-services to become ready (this might take some time)
  shell: oc get po -n ibm-common-services | grep -v Running |grep -v Completed | grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15



# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for serviceaccount being ready
# --------------------------------------------------------------------------------------------------------------------------------------
- name: INFRA MGT -              🕦 Wait for IA CONFIG to become ready
  shell: oc get iaconfigs.aiops.ibm.com -A --no-headers| grep -c "Running"
  register: kubectl_get_sa
  until: kubectl_get_sa.stdout == "1"
  retries: 500
  delay: 15


- name: INFRA MGT -              🌏 Get Cluster FQDN
  shell: |
    CLUSTER_ROUTE=$(oc get routes console -n openshift-console | tail -n 1 2>&1 ) 
    CLUSTER_FQDN=$( echo $CLUSTER_ROUTE | awk '{print $2}')
    echo ${CLUSTER_FQDN##*console.}
  register: CLUSTER_NAME


- name: INFRA MGT -              💾 Set Infrastructure Management Route={{ CLUSTER_NAME.stdout }} 
  set_fact: INFRA_NAME=inframgmtinstall.{{ CLUSTER_NAME.stdout }} 




# Create Infrastructure Management
- name: INFRA MGT -              🚀 Install Infrastructure Management with {{ INFRA_NAME }}
  kubernetes.core.k8s:
    state: present
    template: ./templates/infra-automation/5_iminstall.j2





- name: INFRA MGT -              � WRITE TO LOGFILE
  shell: |
    export MESSAGE=" 🕦 Wait for  IA CONFIG to become ready"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../installAIManager.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes




- name: INFRA MGT -              � WRITE TO LOGFILE
  shell: |
    export MESSAGE=" ✅  IA CONFIG is ready"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes

